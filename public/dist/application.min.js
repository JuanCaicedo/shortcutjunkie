"use strict";var ApplicationConfiguration=function(){var applicationModuleName="ShortcutJunkie",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ui.select","ngLodash"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("core");
"use strict";ApplicationConfiguration.registerModule("shortcuts");
"use strict";ApplicationConfiguration.registerModule("users");
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication","$state",function($scope,Authentication,$state){$scope.authentication=Authentication,$state.transitionTo("home.applications")}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options.class,isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!0})}]);
"use strict";angular.module("shortcuts").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Shortcuts",state:"shortcuts",type:"dropdown",isPublic:!0}),Menus.addSubMenuItem("topbar","shortcuts",{title:"Default Shortcuts",state:"shortcuts.applications",isPublic:!0}),Menus.addSubMenuItem("topbar","shortcuts",{title:"Create Shortcut",state:"shortcuts.create",isPublic:!1,roles:["editor"]})}]);
"use strict";angular.module("shortcuts").config(["$stateProvider",function($stateProvider){$stateProvider.state("home.applications",{views:{shortcuts:{templateUrl:"modules/shortcuts/views/applications-shortcuts.client.view.html"}}}).state("shortcuts",{"abstract":!0,url:"/shortcuts",template:"<ui-view/>"}).state("shortcuts.applications",{url:"/application/:application",templateUrl:"modules/shortcuts/views/applications-shortcuts.client.view.html"}).state("shortcuts.application",{url:"/application/:application",templateUrl:"modules/shortcuts/views/list-shortcuts.client.view.html"}).state("shortcuts.create",{url:"/create",templateUrl:"modules/shortcuts/views/create-shortcut.client.view.html"}).state("shortcuts.view",{url:"/:shortcutId",templateUrl:"modules/shortcuts/views/view-shortcut.client.view.html"}).state("shortcuts.edit",{url:"/:shortcutId/edit",templateUrl:"modules/shortcuts/views/edit-shortcut.client.view.html"})}]);
"use strict";angular.module("shortcuts").controller("ShortcutsController",["$scope","$stateParams","$location","Authentication","Shortcuts","Favorites","lodash",function($scope,$stateParams,$location,Authentication,Shortcuts,Favorites,lodash){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.create=function(){var shortcut=new Shortcuts({keyCombination:this.keyCombination,application:this.application,description:this.description,operatingSystem:this.operatingSystem,category:this.category});shortcut.$save(function(response){$location.path("shortcuts/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(shortcut){if(shortcut){shortcut.$remove();for(var i in $scope.shortcuts)$scope.shortcuts[i]===shortcut&&$scope.shortcuts.splice(i,1)}else $scope.shortcut.$remove(function(){$location.path("shortcuts")})},$scope.update=function(){var shortcut=$scope.shortcut;shortcut.$update(function(){$location.path("shortcuts/"+shortcut._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.shortcuts=Shortcuts.query(),$scope.shortcuts.$promise.then(function(){$scope.applications=$scope.shortcuts.reduce(function(previousValue,currentValue){return-1===previousValue.indexOf(currentValue.application)&&previousValue.push(currentValue.application),previousValue},[]),$scope.operatingSystems=$scope.shortcuts.reduce(function(previousValue,currentValue){return-1===previousValue.indexOf(currentValue.operatingSystem)&&previousValue.push(currentValue.operatingSystem),previousValue},[])})},$scope.findOne=function(){$scope.shortcut=Shortcuts.get({shortcutId:$stateParams.shortcutId})},$scope.selectedApplication=$stateParams.application,$scope.selectedOS="",-1!==navigator.appVersion.indexOf("Win")?$scope.selectedOS="Windows":-1!==navigator.appVersion.indexOf("Mac")?$scope.selectedOS="OS X":-1!==navigator.appVersion.indexOf("X11")?$scope.selectedOS="UNIX":-1!==navigator.appVersion.indexOf("Linux")&&($scope.selectedOS="Linux"),$scope.isEditor=function(user){return user.roles?-1!==user.roles.indexOf("editor"):!1},$scope.toggleFavorite=function(shortcut){$scope.user&&($scope.isFavorite(shortcut)?Favorites.remove({id:shortcut._id},function(favorites){$scope.user.favorites=favorites}):Favorites.save(shortcut,function(favorites){$scope.user.favorites=favorites}))},$scope.isFavorite=function(shortcut){return $scope.user?-1!==$scope.user.favorites.indexOf(shortcut._id):!1},$scope.view=function(shortcut){$location.path("/shortcuts/"+shortcut._id)},$scope.$watch("shortcuts | applicationFilter:selectedApplication | operatingSystemFilter:selectedOS | groupBy",function(categories){$scope.categories=categories},!0)}]);
"use strict";angular.module("shortcuts").filter("applicationFilter",function(){return function(shortcuts,application){if(!shortcuts||!application||""===application)return shortcuts;for(var filtered=[],i=0;i<shortcuts.length;i++){var shortcut=shortcuts[i];shortcut.application===application&&filtered.push(shortcut)}return filtered}});
"use strict";angular.module("shortcuts").filter("groupBy",["$parse",function(){return function(shortcuts){var filtered={};return angular.forEach(shortcuts,function(shortcut){var category=shortcut.category;""===category&&(category="unsorted"),void 0===filtered[category]&&(filtered[category]=[]),filtered[category].push(shortcut)}),filtered}}]);
"use strict";angular.module("shortcuts").filter("operatingSystemFilter",function(){return function(shortcuts,operatingSystem){if(!shortcuts||!operatingSystem||""===operatingSystem)return shortcuts;for(var filtered=[],i=0;i<shortcuts.length;i++){var shortcut=shortcuts[i];shortcut.operatingSystem===operatingSystem&&filtered.push(shortcut)}return filtered}});
"use strict";angular.module("shortcuts").factory("Favorites",["$resource",function($resource){return $resource("api/users/favorites/",{},{query:{method:"GET",isArray:!0},get:{method:"GET",isArray:!0},save:{method:"POST",isArray:!0},remove:{method:"DELETE",isArray:!0,url:"api/users/favorites/:id"}})}]);
"use strict";angular.module("shortcuts").factory("Shortcuts",["$resource",function($resource){return $resource("api/shortcuts/:shortcutId",{shortcutId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/")}]);